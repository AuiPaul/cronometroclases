{"version":3,"sources":["components/Chronometer.jsx","App.jsx","index.js"],"names":["Elboton","styled","button","disabled","Unalista","ul","NumCrono","h1","Chronometer","state","horas","minutos","segundos","milisegundos","running","allTimestamps","started","handleStartClick","interval","setInterval","tick","setState","handleStopClick","clearInterval","handleTimestamp","timestamp","timestamps","push","handleReset","updateTimer","this","value","addZero","onClick","map","idx","id","Component","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64fb450.chunk.js","sourcesContent":[" \r\n\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { generate as id } from 'shortid'\r\n\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst Elboton = styled.button`\r\n  padding: .5rem .8rem;\r\n  border:none;\r\n  outline:none;\r\n  margin-right:1rem;\r\n  margin-bottom:1rem;\r\n  color: ${({ disabled }) => disabled ? '#DADADA' : '#fff'} ;\r\n  background-color: ${({ disabled }) => disabled ? 'rgb(167,167,167)' : '#66bfbf'} ;\r\n/* transiciones  */\r\n  transition:color,background-color  .5s;\r\n  border: solid 3px #056674;\r\n  border-radius: 2em;\r\n  box-shadow: 4px 4px 4px rgb(167,167,167);\r\n  letter-spacing:1px;\r\n\r\n  &:hover{\r\n    color:#fff;\r\n    \r\n    background-color: #056674;    \r\n  }\r\n`\r\nconst Unalista = styled.ul`\r\n  list-style:none;\r\n  padding-left:0;\r\n   \r\n\r\n  font-family: 'Montserrat', sans-serif;  \r\n  color:#ff4b5c;\r\n    font-size: 2rem;\r\n`\r\nconst NumCrono = styled.h1`\r\ncolor:#ff4b5c;\r\n/* font-family: 'Goldman', cursive; */\r\ntext-shadow:none;\r\n\r\n`\r\n\r\nclass Chronometer extends Component {\r\n\r\n    state = {\r\n        horas: 0,\r\n        minutos: 0,\r\n        segundos: 0,\r\n        milisegundos: 0,\r\n        running: false,\r\n        allTimestamps: [],\r\n        started: false\r\n    }\r\n\r\n    //Función que se llama con el boton start\r\n    handleStartClick = () => {\r\n        if (!this.state.running) {\r\n            this.interval = setInterval(() => {\r\n                this.tick()\r\n            }, 100)\r\n\r\n            this.setState({ running: true, started: true })\r\n        }\r\n    }\r\n\r\n    //Conteo del cronómetro\r\n    tick() {\r\n        let horas = this.state.horas\r\n        let minutos = this.state.minutos\r\n        let segundos = this.state.segundos\r\n        let milisegundos = this.state.milisegundos + 1\r\n\r\n        if (milisegundos === 10) {\r\n            milisegundos = 0\r\n            segundos = segundos + 1\r\n        }\r\n\r\n        if (segundos === 60) {\r\n            segundos = 0\r\n            minutos = minutos + 1\r\n        }\r\n\r\n        if (minutos === 60) {\r\n            minutos = 0\r\n            horas = horas + 1\r\n        }\r\n\r\n        this.updateTimer(horas, minutos, segundos, milisegundos)\r\n    }\r\n\r\n    //Función que se llama con el boton stop\r\n    handleStopClick = () => {\r\n        if (this.state.running) {\r\n            clearInterval(this.interval)\r\n            this.setState({ running: false })\r\n        }\r\n    }\r\n\r\n    //Función que se llama con el boton timestamp\r\n    handleTimestamp = () => {\r\n        const { horas, minutos, segundos, milisegundos, allTimestamps } = this.state\r\n\r\n        const timestamp = { horas, minutos, segundos, milisegundos }\r\n\r\n        const timestamps = allTimestamps\r\n\r\n        timestamps.push(timestamp)\r\n\r\n        this.setState({ allTimestamps: timestamps })\r\n\r\n    }\r\n\r\n    //Función que se llama con el boton reset\r\n    handleReset = () => {\r\n        this.updateTimer(0, 0, 0, 0)\r\n        this.setState({ allTimestamps: [], started: false })\r\n    }\r\n\r\n    //Función de actualización del estado\r\n    updateTimer(horas, minutos, segundos, milisegundos) {\r\n        this.setState({\r\n            horas, minutos, segundos, milisegundos\r\n        })\r\n    }\r\n\r\n    addZero(value) {\r\n        return value < 10 ? `0${value}` : value\r\n    }\r\n\r\n    render() {\r\n        let { horas, minutos, segundos, milisegundos, running, allTimestamps } = this.state\r\n        horas = this.addZero(horas)\r\n        minutos = this.addZero(minutos)\r\n        segundos = this.addZero(segundos)\r\n        milisegundos = this.addZero(milisegundos)\r\n        return (\r\n            <>  \r\n                <NumCrono>{`${horas}:${minutos} : ${segundos}:${milisegundos}`}</NumCrono>\r\n                <Elboton disabled={running} onClick={this.handleStartClick}> INICIAR </Elboton>\r\n                <Elboton disabled={!running} onClick={this.handleStopClick}> PARAR </Elboton>\r\n                <Elboton disabled={!running} onClick={this.handleTimestamp}> MARCAR TIEMPO </Elboton>\r\n                {this.state.started && <Elboton disabled={running} onClick={this.handleReset}> REINICIAR </Elboton>}\r\n\r\n                <Unalista>\r\n                    {allTimestamps.map((timestamp, idx) => (\r\n                        <li key={id()}>\r\n                            {`\r\n                                ${idx + 1} -\r\n                                ${this.addZero(timestamp.horas)} :\r\n                                ${this.addZero(timestamp.minutos)} :\r\n                                ${this.addZero(timestamp.segundos)} :\r\n                                ${this.addZero(timestamp.milisegundos)}\r\n                            `}\r\n                        </li>\r\n                    ))}\r\n\r\n                </Unalista>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chronometer;","import React, { Component } from 'react'\n\nimport Chronometer from './components/Chronometer'\n\nimport { createGlobalStyle } from 'styled-components' \n\nconst GlobalStyle = createGlobalStyle` \nbody{\n  background-color:#e0ece4;\n  color: #056674;   \n  ${'' /* color:#ff4b5c; */}\n  text-align:center;\n  margin:0;\n  \n\n  \n}\nh1{\n    ${'' /* whidt:100%; */}\n\n  font-family: 'Montserrat', sans-serif;  \n    ${'' /* background-color:#66bfbf; */}\n    ${'' /* padding:0; */}\n    font-size: 3rem;\n    ${'' /* margin:0; */}\n    \n    text-shadow: 4px 4px 4px rgb(167,167,167);\n\n}\n\n`\n\nclass App extends Component {\n\n    render() {\n        return (\n            <>\n                <GlobalStyle/> \n                <h1>Cronometro</h1>\n                <Chronometer /> \n            </>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './App';\n  import App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}